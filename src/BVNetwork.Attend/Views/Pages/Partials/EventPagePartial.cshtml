@using BVNetwork.Attend.Business.API
@using EPiServer.Core
@using EPiServer.Web.Mvc.Html
@using EPiServer.Globalization
@using EPiServer.Web.Routing
@using EPiServer.Web.WebControls
@using EPiServer.XForms.Util
@model BVNetwork.Attend.Models.ViewModels.EventRegistrationModel




@if (Model.EventPageBase != null)
{
    <div class="col-md-12">

        <div class=" registrationForm">
            @if (Model.AvalibleSeats < 1)
            {
                <div class="well">
                    @Html.PropertyFor(x => x.EventPageBase.NoSeatsContent)
                </div>
            }
            @if (Model.EventPageBase.EventDetails.RegistrationClose < DateTime.Now)
            {
                <div class="well">
                    @Html.PropertyFor(x => x.EventPageBase.ClosedContent)
                </div>
            }
            else if (Model.EventPageBase.EventDetails.RegistrationClose > DateTime.Now && !Model.EventPageBase.EventDetails.Cancelled)
            {
                if (Model.EventPageBase.AvailableSeatsText.ShowAvailableSeats)
                {
                    <strong>
                        @AttendRegistrationEngine.GetAvailableSeatsText(Model.EventPageBase)
                    </strong>
                    <br /><br />
                }
                if (BVNetwork.Attend.Business.API.AttendRegistrationEngine.UseForms == false)
                {
                    if (Model.Sessions.Count > 0)
                    {
                        <div class="well-sessions" id="sessions">
                            <div class="form-group">
                                <h4>@Html.Translate("/eventRegistrationPage/sessionsIntroText") @Model.EventPageBase.PageName</h4>
                                @foreach (var session in Model.Sessions)
                            {
                                if (session.NewGroup)
                                {
                                        <h5>@session.Header</h5>
                                    }

                                    if (AttendSessionEngine.HasParallelSessions(session, Model.Sessions) == false)
                                    {
                                        <div class="checkbox" @(session.Enabled ? "" : "disabled")>
                                            <label>
                                                <input type="checkbox" @(session.Selected ? "checked=''" : "") name="@session.Group" value="@session.ContentID" @(session.Enabled ? "" : "disabled=")> @session.Name
                                            </label>
                                        </div>
                                    }
                                    if (AttendSessionEngine.HasParallelSessions(session, Model.Sessions))
                                    {
                                        <label class="radio-inline">
                                            <input type="radio" @(session.Selected ? "checked=''" : "") name="@session.Group" value="@session.ContentID" @(session.Enabled ? "" : "disabled=")> @session.Name
                                        </label>
                                    }
                                }
                            </div>
                        </div>
                    }

                    @*@Html.PropertyFor(x => x.EventPageBase.RegistrationForm, new { XFormParameters = new EPiServer.XForms.Util.XFormParameters() { PostController=Model. , PostAction = "DoSubmit", SuccessAction = "Success", FailedAction = "Failed", ContentLink = @Model.EventPageBase.ContentLink.ID.ToString() } })*@

                    if (Model.PostedData != null)
                    {
 
                        <div class="xformpage">Allerede påbegynt
                            @using (EPiServer.Web.Mvc.Html.XFormExtensions.BeginXForm(Html, Model.PostedData, new { Action = Model.ActionUrl, @class = "form xform" }))
                            {
 
                                Html.RenderXForm(Model.PostedData.XForm);

                            }
                            @if (Model.EventPageBase.RegistrationForm.Id == ViewData["XFormID"])
                            {
                                @Html.ValidationSummary()
                            }
                        </div>
                    }
                    else
                    { 

                    <div class="xformpage">Ikke påbegynt
                        @using (EPiServer.Web.Mvc.Html.XFormExtensions.BeginXForm(Html, Model.EventPageBase.RegistrationForm, new { Action = Model.ActionUrl, @class = "form xform" }))
                            {
                                
                                Html.RenderXForm(Model.EventPageBase.RegistrationForm);
                        }

                        @if (Model.EventPageBase.RegistrationForm.Id == ViewData["XFormID"])
                        {
                            @Html.ValidationSummary()
                        }
                    </div>
                    }
                }
                else
                {
                    @Html.DisplayFor(x => x.CurrentPage.RegistrationFormContainer, new { Tag="AttendContentArea", EventPage = Model.CurrentPage.ContentLink.ID });
                }

            }
            @if(Model.Messages != null) { 
                foreach (string message in Model.Messages) {
                    @message <br/>
                }
            }
        </div>
    </div>
}
